cmake_minimum_required(VERSION 3.5)

project(Plex-Sessions VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets Network Core Xml)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Network Core Xml)

set(PROJECT_SOURCES
        main.cpp
        plex_server.h
        plex_server.cpp
        settingsdialog.h
        settingsdialog.cpp
        settingsdialog.ui
)

get_target_property(_qmake_executable Qt6::qmake IMPORTED_LOCATION)
get_filename_component(_qt_bin_dir "${_qmake_executable}" DIRECTORY)
find_program(MACDEPLOYQT_EXECUTABLE macdeployqt HINTS "${_qt_bin_dir}")

# The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
# generated by CMake. This variable contains the .icns file name,
# without the path.
set(MACOSX_BUNDLE_ICON_FILE Plex.icns)

# And the following tells CMake where to find and install the file itself.
set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/Resources/Icons/Plex.icns")
set_source_files_properties(${app_icon_macos} PROPERTIES
    MACOSX_PACKAGE_LOCATION "Resources")

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(Plex-Sessions
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
        Resources/resources.qrc
        ${app_icon_macos}
    )
# Define target properties for Android with Qt 6 as:
#    set_property(TARGET Plex-Sessions APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
#                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation
else()
    if(ANDROID)
        add_library(Plex-Sessions SHARED
            ${PROJECT_SOURCES}
        )
# Define properties for Android with Qt 5 after find_package() calls as:
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
    else()
        add_executable(Plex-Sessions
            ${PROJECT_SOURCES}
        )
    endif()
endif()

target_link_libraries(Plex-Sessions PRIVATE Qt${QT_VERSION_MAJOR}::Widgets Qt6::Network Qt6::Xml)

set_target_properties(Plex-Sessions PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER plex-sessions.mvgrafx.net
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

install(TARGETS Plex-Sessions
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(Plex-Sessions)
endif()

add_custom_command(TARGET Plex-Sessions POST_BUILD
        COMMAND "${MACDEPLOYQT_EXECUTABLE}"
        ARGS "Plex-Sessions.app" "-dmg" #"-codesign=\"Developer ID Application: Mark Veinot (BCCD699E2500F16D6473CF4E9E8378220FDC7AFD)\""
        COMMENT "Execute macdeployqt to create macOS bundle")

